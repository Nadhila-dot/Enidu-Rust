name: Rust Cross-Compile

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            use-cross: true
          - target: aarch64-unknown-linux-musl
            use-cross: true
          - target: x86_64-pc-windows-gnu
            use-cross: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Rust toolchain
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      # Install dependencies for cross compilation
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config musl-tools

      # For musl targets, use feature flags to avoid OpenSSL dependency
      - name: Build musl targets
        if: matrix.use-cross
        run: |
          # Use the rustls feature to avoid OpenSSL dependency
          cargo build --release --target ${{ matrix.target }} --no-default-features --features rustls-tls
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
          CARGO_TERM_COLOR: always
          # Disable pkg-config for cross-compilation
          PKG_CONFIG_ALLOW_CROSS: 0

      # For Windows target, build normally
      - name: Build Windows target
        if: "!matrix.use-cross"
        run: cargo build --release --target ${{ matrix.target }}

      # Upload the compiled binaries
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/